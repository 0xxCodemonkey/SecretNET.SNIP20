<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"[]>
<html>
  <head><link rel="shortcut icon" href="../favicon.ico" />
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="save" content="history" />
    <title>Snip20Tx Members</title>
    <link rel="stylesheet" type="text/css" href="../styles/lightweight.css" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt" />
    <link rel="stylesheet" type="text/css" href="../styles/lw-code.css" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt" />
    <script type="text/javascript" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt" src="../scripts/languageSelector.js"> </script>
    <meta name="container" content="SecretNET.Token" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt" />
    <meta name="file" content="AllMembers.T-SecretNET.Token.Snip20Tx" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt" />
    <meta name="guid" content="AllMembers.T-SecretNET.Token.Snip20Tx" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt" />
    <xml xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
      <MSHelp:Attr Name="AssetID" Value="AllMembers.T:SecretNET.Token.Snip20Tx" />
      <MSHelp:TOCTitle Title="Snip20Tx Members" />
      <MSHelp:RLTitle Title="Snip20Tx Members (SecretNET.Token)" />
      <MSHelp:Keyword Index="A" Term="AllMembers.T:SecretNET.Token.Snip20Tx" />
      <MSHelp:Keyword Index="A" Term="frlrfSecretNETTokenSnip20TxMembersTopic" />
      <MSHelp:Keyword Index="K" Term="Snip20Tx class" />
      <MSHelp:Keyword Index="K" Term="Snip20Tx class, all members" />
      <MSHelp:Keyword Index="K" Term="SecretNET.Token.Snip20Tx class" />
      <MSHelp:Attr Name="HelpPriority" Value="1" />
      <MSHelp:Attr Name="DevLang" Value="CSharp" />
      <MSHelp:Attr Name="DevLang" Value="VB" />
      <MSHelp:Attr Name="Locale" Value="en-us" />
      <MSHelp:Attr Name="TopicType" Value="kbSyntax" />
      <MSHelp:Attr Name="TopicType" Value="apiref" />
      <MSHelp:Attr Name="AssemblyVersion" Value="" />
    </xml>
  <link rel="stylesheet" href="../TOC.css"><script type="text/javascript" src="../TOC.js"></script></head>
  <body onload="javascript: Initialize();" onresize="javascript: ResizeTree();">
            <div id="TOCDiv" class="TOCDiv" style="width: 310px; float: left; position: relative; ">

            <div id="divSearchOpts" class="SearchOpts" style="height: 95px; display: none;">
                <div class="SearchOptsInner">
                    <img class="TOCLink" onclick="javascript: ShowHideSearch(false);" src="../Close.png" height="24" width="24" alt="Hide Search" title="Hide Search" style="float: right;" />
                    <span class="Title">Keyword(s) to search:</span>
                </div>
                <div class="SearchOptsInner">
                    <input id="txtSearchText" type="text" style="width: 95.5%;" onkeypress="javascript: return OnSearchTextKeyPress(event);" />
                </div>
                <div class="SearchOptsInner">
                    <input id="chkSortByTitle" type="checkbox" />&nbsp;Sort results by title
                    <input type="button" value="Search" onclick="javascript: return PerformSearch();" style="float: right;" />
                </div>
            </div>

            <div id="divIndexOpts" class="IndexOpts" style="height: 28px; display: none;">
                <img class="TOCLink" onclick="javascript: ShowHideIndex(false);"
                     src="../Close.png" height="24" width="24" alt="Hide Keyword Index" title="Hide Keyword Index" style="float: right;" />
                <span class="Title">Keyword Index</span>
            </div>

            <div id="divNavOpts" class="NavOpts" style="height: 28px;">
                <!--<img class="TOCLink" onclick="javascript: SyncTOC();" src="../SyncTOC.png"
                     height="24" width="24" alt="Sync to TOC" title="Sync to TOC" />-->
                <img class="TOCLink" onclick="javascript: ExpandOrCollapseAll(true);"
                     src="../ExpandAll.png" height="24" width="24" alt="Expand all" title="Expand all" />
                <img class="TOCLink" onclick="javascript: ExpandOrCollapseAll(false);"
                     src="../CollapseAll.png" height="24" width="24" alt="Collapse all" title="Collapse all" />
                <!--<img class="TOCLink" onclick="javascript: alert('Please make sure to use either Index.aspx or Index.php to enable the Keyword Index feature.');"
                     src="../Index.png" height="24" width="24" alt="Keyword Index" title="Keyword Index" />-->
                <img class="TOCLink" onclick="javascript: ShowHideSearch(true);"
                     src="../Search.png" height="24" width="24" alt="Search" title="Search" />
                <img class="TOCLink" onclick="javascript: ShowDirectLink();"
                     src="../Link.png" height="24" width="24" alt="Get direct link to the displayed topic" title="Get direct link to the displayed topic" />
                <a href="#" onclick="javascript: window.history.go(-1); return false;">
                    <img class="TOCLink" style="float: right;"
                         src="../Back.png" height="24" width="24" alt="Previous page" title="Previous page" />
                </a>
            </div>

            <div class="Tree" id="divSearchResults" style="display: none;"
                 onselectstart="javascript: return false;">
            </div>

            <div class="Tree" id="divIndexResults" style="display: none;"
                 onselectstart="javascript: return false;">
            </div>

            <div class="Tree" id="divTree" onselectstart="javascript: return false;">
              <div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="N-SecretNET.Token.htm" target="_self">SecretNET.Token Namespace</a>
<div class="Hidden">
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.BurnFromRequest.htm" target="_self">BurnFromRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.BurnFromRequest_Payload.htm" target="_self">BurnFromRequest_Payload Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.BurnFromResponse.htm" target="_self">BurnFromResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.BurnRequest.htm" target="_self">BurnRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.BurnRequest_Payload.htm" target="_self">BurnRequest_Payload Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.BurnResponse.htm" target="_self">BurnResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.BurnType.htm" target="_self">BurnType Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.BurnType_Burn.htm" target="_self">BurnType_Burn Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.ConfigSettings.htm" target="_self">ConfigSettings Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.DecreaseAllowanceRequest.htm" target="_self">DecreaseAllowanceRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.DecreaseAllowanceRequest_Payload.htm" target="_self">DecreaseAllowanceRequest_Payload Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.DecreaseAllowanceResponse.htm" target="_self">DecreaseAllowanceResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.DecreaseAllowanceResponse_Result.htm" target="_self">DecreaseAllowanceResponse_Result Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.DepositRequest.htm" target="_self">DepositRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.DepositRequest_Payload.htm" target="_self">DepositRequest_Payload Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.DepositResponse.htm" target="_self">DepositResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.DepositType.htm" target="_self">DepositType Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetAllowanceRequest.htm" target="_self">GetAllowanceRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetAllowanceRequest_Payload.htm" target="_self">GetAllowanceRequest_Payload Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetAllowanceResponse.htm" target="_self">GetAllowanceResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetAllowanceResponse_Result.htm" target="_self">GetAllowanceResponse_Result Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetBalanceRequest.htm" target="_self">GetBalanceRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetBalanceRequest_Payload.htm" target="_self">GetBalanceRequest_Payload Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetBalanceResponse.htm" target="_self">GetBalanceResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetBalanceResponse_Error.htm" target="_self">GetBalanceResponse_Error Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetBalanceResponse_Result.htm" target="_self">GetBalanceResponse_Result Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetExchangeRateRequest.htm" target="_self">GetExchangeRateRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetExchangeRateResponse.htm" target="_self">GetExchangeRateResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetExchangeRateResponse_Result.htm" target="_self">GetExchangeRateResponse_Result Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetMintersRequest.htm" target="_self">GetMintersRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetMintersResponse.htm" target="_self">GetMintersResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetMintersResponse_Result.htm" target="_self">GetMintersResponse_Result Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetTokenInfoRequest.htm" target="_self">GetTokenInfoRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetTokenInfoResponse.htm" target="_self">GetTokenInfoResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetTokenInfoResponse_Result.htm" target="_self">GetTokenInfoResponse_Result Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetTransactionHistoryRequest.htm" target="_self">GetTransactionHistoryRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetTransactionHistoryRequest_Payload.htm" target="_self">GetTransactionHistoryRequest_Payload Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetTransactionHistoryResponse.htm" target="_self">GetTransactionHistoryResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetTransactionHistoryResponse_Result.htm" target="_self">GetTransactionHistoryResponse_Result Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetTransferHistoryRequest.htm" target="_self">GetTransferHistoryRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetTransferHistoryRequest_Payload.htm" target="_self">GetTransferHistoryRequest_Payload Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetTransferHistoryResponse.htm" target="_self">GetTransferHistoryResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.GetTransferHistoryResponse_Result.htm" target="_self">GetTransferHistoryResponse_Result Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.IncreaseAllowanceRequest.htm" target="_self">IncreaseAllowanceRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.IncreaseAllowanceRequest_Payload.htm" target="_self">IncreaseAllowanceRequest_Payload Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.IncreaseAllowanceResponse.htm" target="_self">IncreaseAllowanceResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.IncreaseAllowanceResponse_Result.htm" target="_self">IncreaseAllowanceResponse_Result Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.InitBalance.htm" target="_self">InitBalance Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.InstantiateSnip20.htm" target="_self">InstantiateSnip20 Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MintRequest.htm" target="_self">MintRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MintRequest_Payload.htm" target="_self">MintRequest_Payload Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MintResponse.htm" target="_self">MintResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MintType.htm" target="_self">MintType Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MintType_Mint.htm" target="_self">MintType_Mint Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MsgBurn.htm" target="_self">MsgBurn Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MsgBurnFrom.htm" target="_self">MsgBurnFrom Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MsgCreateViewingKey.htm" target="_self">MsgCreateViewingKey Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MsgDecreaseAllowance.htm" target="_self">MsgDecreaseAllowance Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MsgDeposit.htm" target="_self">MsgDeposit Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MsgIncreaseAllowance.htm" target="_self">MsgIncreaseAllowance Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MsgInstantiate.htm" target="_self">MsgInstantiate Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MsgMint.htm" target="_self">MsgMint Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MsgRedeem.htm" target="_self">MsgRedeem Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MsgRegisterReceive.htm" target="_self">MsgRegisterReceive Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MsgSend.htm" target="_self">MsgSend Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MsgSendFrom.htm" target="_self">MsgSendFrom Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MsgSetMinters.htm" target="_self">MsgSetMinters Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MsgSetViewingKey.htm" target="_self">MsgSetViewingKey Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MsgTransfer.htm" target="_self">MsgTransfer Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.MsgTransferFrom.htm" target="_self">MsgTransferFrom Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.RedeemRequest.htm" target="_self">RedeemRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.RedeemRequest_Payload.htm" target="_self">RedeemRequest_Payload Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.RedeemResponse.htm" target="_self">RedeemResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.RedeemType.htm" target="_self">RedeemType Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.RegisterReceiveRequest.htm" target="_self">RegisterReceiveRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.RegisterReceiveRequest_Payload.htm" target="_self">RegisterReceiveRequest_Payload Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.RegisterReceiveResponse.htm" target="_self">RegisterReceiveResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.RichTx.htm" target="_self">RichTx Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.SendFromRequest.htm" target="_self">SendFromRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.SendFromRequest_Payload.htm" target="_self">SendFromRequest_Payload Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.SendFromResponse.htm" target="_self">SendFromResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.SendRequest.htm" target="_self">SendRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.SendRequest_Payload.htm" target="_self">SendRequest_Payload Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.SendResponse.htm" target="_self">SendResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.SetMintersRequest.htm" target="_self">SetMintersRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.SetMintersRequest_Payload.htm" target="_self">SetMintersRequest_Payload Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.SetMintersResponse.htm" target="_self">SetMintersResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.SimpleStatusResponse_Result.htm" target="_self">SimpleStatusResponse_Result Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.Snip20Client.htm" target="_self">Snip20Client Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.Snip20Querier.htm" target="_self">Snip20Querier Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.Snip20Tx.htm" target="_self">Snip20Tx Class</a>
<div class="Hidden">
<div class="TreeItem">
<img src="../Item.gif"/><a class="UnselectedNode" onclick="javascript: return SelectNode(this);" href="AllMembers.T-SecretNET.Token.Snip20Tx.htm" target="_self">Snip20Tx Members</a>
</div>
<div class="TreeItem">
<img src="../Item.gif"/><a class="UnselectedNode" onclick="javascript: return SelectNode(this);" href="M-SecretNET.Token.Snip20Tx.-ctor.htm" target="_self">Snip20Tx Constructor </a>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="Methods.T-SecretNET.Token.Snip20Tx.htm" target="_self">Snip20Tx Methods</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="Properties.T-SecretNET.Token.Snip20Tx.htm" target="_self">Snip20Tx Properties</a>
<div class="Hidden">
</div>
</div>
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.Snip20TxSimulate.htm" target="_self">Snip20TxSimulate Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.TransactionTx.htm" target="_self">TransactionTx Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.TransferFromRequest.htm" target="_self">TransferFromRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.TransferFromRequest_Payload.htm" target="_self">TransferFromRequest_Payload Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.TransferFromResponse.htm" target="_self">TransferFromResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.TransferRequest.htm" target="_self">TransferRequest Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.TransferRequest_Payload.htm" target="_self">TransferRequest_Payload Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.TransferResponse.htm" target="_self">TransferResponse Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.TransferType.htm" target="_self">TransferType Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.TransferType_Transfer.htm" target="_self">TransferType_Transfer Class</a>
<div class="Hidden">
</div>
</div>
<div class="TreeNode">
<img class="TreeNodeImg" onclick="javascript: Toggle(this);" src="../Collapsed.png"/><a class="UnselectedNode" onclick="javascript: return Expand(this);" href="T-SecretNET.Token.Tx.htm" target="_self">Tx Class</a>
<div class="Hidden">
</div>
</div>
</div>
</div>

            </div>

        </div>

        <div id="TOCSizer" class="TOCSizer" onmousedown="OnMouseDown(event)" onselectstart="javascript: return false;"></div>
        
        <div id ="TopicContent" name="TopicContent" class="TopicContent" style="float: none; margin-left: 312px;height: -webkit-fill-available;display:block;overflow: auto;">
          
          <!-- Content Starts Here -->
          <div class="contentPlaceHolder" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:msxsl="urn:schemas-microsoft-com:xslt">
      <div class="content">
        <div class="topicContainer">
          <div class="topic">
            <p class="majorTitle" />
            <h1 class="title">Snip20Tx Members</h1>
            <div id="mainSection">
              <div id="mainBody">
                <p />
                <p>The <a href="T-SecretNET.Token.Snip20Tx.htm">Snip20Tx</a> type exposes the following members.</p>
                <div class="LW_CollapsibleArea_Container">
                  <div class="LW_CollapsibleArea_TitleDiv">
                    <h2 class="LW_CollapsibleArea_Title">Constructors</h2>
                    <div class="LW_CollapsibleArea_HrDiv">
                      <hr class="LW_CollapsibleArea_Hr" />
                    </div>
                  </div>
                  <a id="constructorTableSection">
                    <!---->
                  </a>
                  <table class="members">
                    <tr>
                      <th class="iconColumn">
               
            </th>
                      <th class="nameColumn">Name</th>
                      <th class="descriptionColumn">Description</th>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.-ctor.htm">Snip20Tx</a>
                      </td>
                      <td>
                        <div class="summary">
   Initializes a new instance of the <a href="T-SecretNET.Token.Snip20Tx.htm">Snip20Tx</a> class.
   </div>
                      </td>
                    </tr>
                  </table>
                </div>
                <div class="LW_CollapsibleArea_Container">
                  <div class="LW_CollapsibleArea_TitleDiv">
                    <h2 class="LW_CollapsibleArea_Title">Methods</h2>
                    <div class="LW_CollapsibleArea_HrDiv">
                      <hr class="LW_CollapsibleArea_Hr" />
                    </div>
                  </div>
                  <a id="methodTableSection">
                    <!---->
                  </a>
                  <table class="members">
                    <tr>
                      <th class="iconColumn">
               
            </th>
                      <th class="nameColumn">Name</th>
                      <th class="descriptionColumn">Description</th>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.Burn.htm">Burn(MsgBurn, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   MUST remove amount tokens from the balance of the Cosmos message sender and MUST reduce the total supply by the same amount.
   MUST NOT transfer the funds to another account.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.Burn_1.htm">Burn(String, String, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   MUST remove amount tokens from the balance of the Cosmos message sender and MUST reduce the total supply by the same amount.
   MUST NOT transfer the funds to another account.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.BurnFrom.htm">BurnFrom(MsgBurnFrom, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   This works like TransferFrom, but burns the tokens instead of transferring them.
   This will reduce the owner's balance, total_supply and the caller's allowance.
  
   This function should be available when a contract supports both the Mintable and Allowances interfaces.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.BurnFrom_1.htm">BurnFrom(String, String, String, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   This works like TransferFrom, but burns the tokens instead of transferring them.
   This will reduce the owner's balance, total_supply and the caller's allowance.
  
   This function should be available when a contract supports both the Mintable and Allowances interfaces.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.CreateViewingKey.htm">CreateViewingKey(MsgCreateViewingKey, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   This function generates a new viewing key for the Cosmos message sender, which is used in ALL account specific queries. This key is used to validate the identity of the caller,
   since in queries in Cosmos there is no way to cryptographically authenticate the querier's identity.
  
   The Viewing Key MUST be stored in such a way that lookup takes a significant amount to time to perform, in order to be resistant to brute-force attacks.
   The viewing key MUST NOT control any functions which actively affect the balance of the user.
  
   The entropy field of the request should be a client supplied string used for entropy for generation of the viewing key.Secure implementation is left to the client,
   but it is recommended to use base-64 encoded random bytes and not predictable inputs.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.CreateViewingKey_1.htm">CreateViewingKey(String, String, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   This function generates a new viewing key for the Cosmos message sender, which is used in ALL account specific queries. This key is used to validate the identity of the caller,
   since in queries in Cosmos there is no way to cryptographically authenticate the querier's identity.
  
   The Viewing Key MUST be stored in such a way that lookup takes a significant amount to time to perform, in order to be resistant to brute-force attacks.
   The viewing key MUST NOT control any functions which actively affect the balance of the user.
  
   The entropy field of the request should be a client supplied string used for entropy for generation of the viewing key.Secure implementation is left to the client,
   but it is recommended to use base-64 encoded random bytes and not predictable inputs.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.DecreaseAllowance.htm">DecreaseAllowance(MsgDecreaseAllowance, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   Decrease or clear the allowance by a sent amount. This may optionally come with an expiration time, which if set limits when the approval can be used.
   If amount is equal or greater than the current allowance, this action MUST set the allowance to zero, and return a "success" response.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.DecreaseAllowance_1.htm">DecreaseAllowance(String, String, String, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>Int32<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   Decrease or clear the allowance by a sent amount. This may optionally come with an expiration time, which if set limits when the approval can be used.
   If amount is equal or greater than the current allowance, this action MUST set the allowance to zero, and return a "success" response.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.Deposit.htm">Deposit(MsgDeposit, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   Deposits a native coin into the contract, which will mint an equivalent amount of tokens to be created.
   The amount MUST be sent in the sent_funds field of the transaction itself, as coins must really be sent to the contract's native address.
   The minted amounts MUST match the exchange rate specified by the ExchangeRate query.
   The deposit MUST return an error if any coins that do not match expected denominations are sent.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.Deposit_1.htm">Deposit(String, <span class="languageSpecificText"><span class="cpp">array&lt;</span></span>Coin<span class="languageSpecificText"><span class="cpp">&gt;</span><span class="cs">[]</span><span class="vb">()</span><span class="nu">[]</span><span class="fs">[]</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   Deposits a native coin into the contract, which will mint an equivalent amount of tokens to be created.
   The amount MUST be sent in the sent_funds field of the transaction itself, as coins must really be sent to the contract's native address.
   The minted amounts MUST match the exchange rate specified by the ExchangeRate query.
   The deposit MUST return an error if any coins that do not match expected denominations are sent.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.IncreaseAllowance.htm">IncreaseAllowance(MsgIncreaseAllowance, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   Set or increase the allowance such that spender may access up to current_allowance + amount tokens from the Cosmos message sender account.
   This may optionally come with an expiration time, which if set limits when the approval can be used (by time).
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.IncreaseAllowance_1.htm">IncreaseAllowance(String, String, String, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>Int32<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   Set or increase the allowance such that spender may access up to current_allowance + amount tokens from the Cosmos message sender account.
   This may optionally come with an expiration time, which if set limits when the approval can be used (by time).
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.Instantiate.htm">Instantiate</a>
                      </td>
                      <td>
                        <div class="summary">
   Instantiates / configures the Token contract (https://github.com/SecretFoundation/SNIPs/blob/master/SNIP-20.md at 2022-07-11).
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.Mint.htm">Mint(MsgMint, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   This function MUST be allowed only for accounts on the minters list.
   If the Cosmos message sender is an allowed minter, this will create amount new tokens and add them to the balance of recipient.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.Mint_1.htm">Mint(String, String, String, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   This function MUST be allowed only for accounts on the minters list.
   If the Cosmos message sender is an allowed minter, this will create amount new tokens and add them to the balance of recipient.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.Redeem.htm">Redeem(MsgRedeem, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   Redeems tokens in exchange for native coins.
   The redeemed tokens SHOULD be burned, and taken out of the pool.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.Redeem_1.htm">Redeem(String, String, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   Redeems tokens in exchange for native coins.
   The redeemed tokens SHOULD be burned, and taken out of the pool.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.RegisterReceive.htm">RegisterReceive(MsgRegisterReceive, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   This message is used to tell the SNIP-20 contract to call the Receive function of the Cosmos message sender after a successful Send.
  
   In Secret Network this is used to pair a code hash with the contract address that must be called.
   This means that the SNIP-20 MUST store the sent code_hash and use it when calling the Receive function.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.RegisterReceive_1.htm">RegisterReceive(String, String, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   This message is used to tell the SNIP-20 contract to call the Receive function of the Cosmos message sender after a successful Send.
  
   In Secret Network this is used to pair a code hash with the contract address that must be called.
   This means that the SNIP-20 MUST store the sent code_hash and use it when calling the Receive function.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.Send.htm">Send(MsgSend, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   Moves amount from the Cosmos message sender account to the recipient account. The receiver account MAY be a contract that has registered itself using a RegisterReceive message. If such a registration has been performed, a message MUST be sent to the contract's address as a callback, after completing the transfer. The format of this message is described under Receiver interface.
  
   If the callback fails due to an error in the Receiver contract, the entire transaction will be reverted.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.Send_1.htm">Send(String, String, String, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   Moves amount from the Cosmos message sender account to the recipient account. The receiver account MAY be a contract that has registered itself using a RegisterReceive message. If such a registration has been performed, a message MUST be sent to the contract's address as a callback, after completing the transfer. The format of this message is described under Receiver interface.
  
   If the callback fails due to an error in the Receiver contract, the entire transaction will be reverted.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.SendFrom.htm">SendFrom(MsgSendFrom, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   SendFrom is to Send, what TransferFrom is to Transfer.
   This allows a pre-approved account to not just transfer the tokens, but to send them to another address to trigger a given action.
   Note SendFrom will set the Receive{sender} to be the env.message.sender (the account that triggered the transfer) rather than the owner account (the account the money is coming from).
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.SendFrom_1.htm">SendFrom(String, String, String, String, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   SendFrom is to Send, what TransferFrom is to Transfer.
   This allows a pre-approved account to not just transfer the tokens, but to send them to another address to trigger a given action.
   Note SendFrom will set the Receive{sender} to be the env.message.sender (the account that triggered the transfer) rather than the owner account (the account the money is coming from).
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.SetMinters.htm">SetMinters(MsgSetMinters, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   This function MUST only be allowed for authorized accounts.
   The list of addresses in the message will be set to the list of minters in the contract. This completely overrides the previously saved list.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.SetMinters_1.htm">SetMinters(String, String, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   This function MUST only be allowed for authorized accounts.
   The list of addresses in the message will be set to the list of minters in the contract. This completely overrides the previously saved list.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.SetViewingKey.htm">SetViewingKey(MsgSetViewingKey, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   Set a viewing key with a predefined value for Cosmos message sender, without creating it. This is useful to manage multiple SNIP-20 tokens using the same viewing key.
   If a viewing key is already set, the contract MUST replace the current key.If a viewing key is not set, the contract MUST set the provided key as the viewing key.
   It is NOT RECOMMENDED to use this function to create easy to remember passwords for users, but this is left up to implementors to enforce.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.SetViewingKey_1.htm">SetViewingKey(String, String, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   Set a viewing key with a predefined value for Cosmos message sender, without creating it. This is useful to manage multiple SNIP-20 tokens using the same viewing key.
   If a viewing key is already set, the contract MUST replace the current key.If a viewing key is not set, the contract MUST set the provided key as the viewing key.
   It is NOT RECOMMENDED to use this function to create easy to remember passwords for users, but this is left up to implementors to enforce.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.Transfer.htm">Transfer(MsgTransfer, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   Moves tokens from the account that appears in the Cosmos message sender field to the account in the recipient field.
  
   Variation from CW-20: It is NOT required to validate that the recipient is an address and not a contract. This command will work when trying to send funds to contract accounts as well.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.Transfer_1.htm">Transfer(String, String, String, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   Moves tokens from the account that appears in the Cosmos message sender field to the account in the recipient field.
  
   Variation from CW-20: It is NOT required to validate that the recipient is an address and not a contract. This command will work when trying to send funds to contract accounts as well.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.TransferFrom.htm">TransferFrom(MsgTransferFrom, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   Transfer an amount of tokens from a specified account, to another specified account.
   This action MUST fail if the Cosmos message sender does not have an allowance limit that is equal or greater than the amount of tokens sent for the owner account.
   </div>
                      </td>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubmethod.gif" alt="Public method" title="Public method" />
                      </td>
                      <td>
                        <a href="M-SecretNET.Token.Snip20Tx.TransferFrom_1.htm">TransferFrom(String, String, String, String, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>String<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>, Nullable<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="fs">&lt;'</span><span class="nu">(</span></span>TxOptions<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="fs">&gt;</span><span class="nu">)</span></span>)</a>
                      </td>
                      <td>
                        <div class="summary">
   Transfer an amount of tokens from a specified account, to another specified account.
   This action MUST fail if the Cosmos message sender does not have an allowance limit that is equal or greater than the amount of tokens sent for the owner account.
   </div>
                      </td>
                    </tr>
                  </table>
                </div>
                <div class="LW_CollapsibleArea_Container">
                  <div class="LW_CollapsibleArea_TitleDiv">
                    <h2 class="LW_CollapsibleArea_Title">Properties</h2>
                    <div class="LW_CollapsibleArea_HrDiv">
                      <hr class="LW_CollapsibleArea_Hr" />
                    </div>
                  </div>
                  <a id="propertyTableSection">
                    <!---->
                  </a>
                  <table class="members">
                    <tr>
                      <th class="iconColumn">
               
            </th>
                      <th class="nameColumn">Name</th>
                      <th class="descriptionColumn">Description</th>
                    </tr>
                    <tr data="public;declared;notNetfw;">
                      <td>
                        <img src="../icons/pubproperty.gif" alt="Public property" title="Public property" />
                      </td>
                      <td>
                        <a href="P-SecretNET.Token.Snip20Tx.Simulate.htm">Simulate</a>
                      </td>
                      <td>
                        <div class="summary">
   Simulate Transaction
   </div>
                      </td>
                    </tr>
                  </table>
                </div>
                <div class="LW_CollapsibleArea_Container">
                  <div class="LW_CollapsibleArea_TitleDiv">
                    <h2 class="LW_CollapsibleArea_Title">See Also</h2>
                    <div class="LW_CollapsibleArea_HrDiv">
                      <hr class="LW_CollapsibleArea_Hr" />
                    </div>
                  </div>
                  <a id="seeAlsoSection">
                    <!---->
                  </a>
                  <div class="seeAlsoStyle">
                    <a href="T-SecretNET.Token.Snip20Tx.htm">Snip20Tx Class</a>
                  </div>
                  <div class="seeAlsoStyle">
                    <a href="N-SecretNET.Token.htm">SecretNET.Token Namespace</a>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="footer">
        <div id="footer" class="footerContainer">
          <div class="footerLogoContainer">
            <div style="margin-top:5px">
              <span class="customCopyrightFooter" />
            </div>
            <div style="margin-top:5px" class="copyrightFooter">Help File generated with GhostDoc</div>
            <div> </div>
          </div>
        </div>
      </div>
    </div>
          <!-- /Content Ends Here -->
        </div>


  </body>
</html>